var dataTypes = require('../data_types');

function Event(client) {
  this.client = client;
}

Event.prototype.retrieve = function retrieve(params, callback) {
  if (typeof params === 'function') {
    callback = params;
    params = {};
  }
  var req = dataTypes.EventIdRequest.create(params);
  if (req instanceof Error) {
    return callback(req, null);
  }
  this.client.request('get', 'events' + '/' + req.id.toString(), req, function(err, data) {
    if (err) {
      callback(err, null);
    } else {
      var res = new dataTypes.EventResponse(data);
      if (res instanceof Error) {
        callback(res, null);
      } else {
        callback(null, res);
      }
    }
  });
};

Event.prototype.all = function all(params, callback) {
  if (typeof params === 'function') {
    callback = params;
    params = {};
  }
  var req = dataTypes.EventListRequest.create(params);
  if (req instanceof Error) {
    return callback(req, null);
  }
  this.client.request('get', 'events', req, function(err, data) {
    if (err) {
      callback(err, null);
    } else {
      var res = new dataTypes.EventResponseList(data);
      if (res instanceof Error) {
        callback(res, null);
      } else {
        callback(null, res);
      }
    }
  });
};

module.exports = Event;
