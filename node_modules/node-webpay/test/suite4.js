'use strict';

var assert = require("assert");

module.exports = function(wp){

  console.log('*** suite4 start');


  var auth = require('./auth');
  var wp = require('../index')({
    auth: auth,
    currency: 'jpy'
  });


  // line 1: create a customer who has active card
  function test_1_1(prevData) {
    wp({
      command: 'createCustomer',
      'card[number]': '4242424242424242',
      'card[exp_month]': '11',
      'card[exp_year]': '2020',
      'card[cvc]': '1234',
      'card[name]': 'test taro',
      description: 'Active card deletion test'
    }, function(data) {
      console.log('# created a customer for active card deletion test');
      next(line1, data);
    });
  }

  function test_1_2(prevData) {
    wp({
      command: 'getCustomer',
      id: prevData.id
    }, function(data) {
      assert(data.object === 'customer', '# data object should be customer');
      assert(data.description === 'Active card deletion test', '# description should be \'Active card deletion test\', but actually' + data.description)
      console.log('# customer creation successful');
      next(line1, data);
    });
  }
  
  function test_1_3(prevData) {
    wp({
      command: 'deleteActiveCard',
      id: prevData.id
    }, function(data) {
      assert(data.object === 'customer', '# data object should be customer');
      assert(data.active_card === null, '# active_card should be null, but actually' + data.active_card);
      console.log('# deleteActiveCard-1: delete active card without deleting customer');
      next(line1, data);
    });
  }
  
  var line1 = [ test_1_1, test_1_2, test_1_3 ];
  var lines = [ line1 ];
  var linesDone = 0;

  function next(line) {
    var args = Array.prototype.slice.call(arguments);
    args.shift();
    if (line.length === 0) {
      linesDone++;
      if(lines.length === linesDone) {
        console.log('* suite 4 complete');
      }
    } else {
      line.shift().apply(null, args);
    }
  }

  lines.forEach(function(e){
    next(e);
  });
};
